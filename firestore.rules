rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isViewer() {
      return request.auth.token.role == 'viewer';
    }

    match /users/{userId} {
      allow list: if isAdmin();
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId 
                    && request.resource.data.role == 'applicant'
                    && request.resource.data.isAdmin == false;
      allow update, delete: if isAdmin();
    
      match /chat/{chatDocId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    match /contacts/{contactId} {
      allow read: if isViewer() ||
      isAdmin();
      allow write: if isAdmin();
    }

    match /books/{bookId} {
        allow read: if isViewer() ||
        isAdmin();
        allow write: if isAdmin();
    }

    match /transactions/{transactionId} {
        allow read: if isViewer() ||
        isAdmin();
        allow create: if isAdmin(); // Only admins can create transactions
        allow update, delete: if false;
        // Transactions should be immutable
    }

    match /transactions/{transactionId} {
        allow read: if isViewer() ||
        isAdmin();
        allow create: if isAdmin(); // Only admins can create transactions
        // FIX: Allow admin to update and delete for inline editing / correction purposes
        allow update, delete: if isAdmin(); 
        
        // Optional: Add specific update validation if needed (e.g., only update date)
        // allow update: if isAdmin() && (
        //     request.resource.data.keys().hasOnly(['transactionDate', 'totalPrice']) ||
        //     request.resource.data.keys().hasOnly(['transactionDate'])
        // );
    }

    match /events/{eventId} {
        allow read: if isViewer() ||
        isAdmin();
        allow write: if isAdmin();
    }
  }
}